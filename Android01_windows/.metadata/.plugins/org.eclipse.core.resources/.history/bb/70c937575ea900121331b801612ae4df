package com.example.bluetooth02;

import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;

public class MainActivity extends Activity {
	private Button discoverButton = null;
	private Button scanButton = null;
	private BluetoothAdapter bluetoothAdapter = null;
	private BluetoothReceiver bluetoothReceiver = null;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		discoverButton = (Button)findViewById(R.id.discoverButtonId);
		scanButton = (Button)findViewById(R.id.scanButtonId);
		
		discoverButton.setOnClickListener(new DiscoverButtonListener());
		scanButton.setOnClickListener(new Scanbutton());
		// 创建一个intentFilter对象，将其action指定为BluetoothDevice.ACTION_FOUND
		IntentFilter intentFilter = new IntentFilter(BluetoothDevice.ACTION_FOUND);
		bluetoothReceiver = new BluetoothReceiver();
		// 注册广播接收器
		registerReceiver(bluetoothReceiver, intentFilter);
		bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
		
		
	}
	private class BluetoothReceiver extends BroadcastReceiver{

		@Override
		public void onReceive(Context context, Intent intent) {
			// TODO Auto-generated method stub
			String action = intent.getAction();
			if(BluetoothDevice.ACTION_FOUND.equals(action)){
				// 远程的蓝牙适配器
				BluetoothDevice bluetoothDevice = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
				System.out.println(bluetoothDevice.getAddress());
			}
			
		}
		
	}
	// 该监听器用于修改蓝牙可见性
	private class DiscoverButtonListener implements OnClickListener{

		@Override
		public void onClick(View v) {
			// 创建一个Intent对象，并将其action的值设置为BluetoothAdapter。ACTION_REQUEST_DISCOVERABLE
			Intent discoverableIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
			// 将一个键值对存放到Intent对象当中，主要用来指定可见状态的持续时间
			discoverableIntent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, 500);
			// 开启一个Activity，系统内部的一个activity
			startActivity(discoverableIntent);
			
		}
		
	}
	private class Scanbutton implements OnClickListener{

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			bluetoothAdapter.startDiscovery();// 这里会发送一个广播
			
		}
		
	}
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		unregisterReceiver(bluetoothReceiver);
		super.onDestroy();
	}

	

}
